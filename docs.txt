1- download laravel-coreui-generator v8
2- add following to composer.json

                    "repositories": [
                        {
                            "type": "vcs",
                            "url":  "git@github.com:InfyOmLabs/swaggervel.git"
                        }
                    ],
                    "require": {
                        "appointer/swaggervel": "dev-master",
                        "infyomlabs/swagger-generator": "dev-master",
                        "infyomlabs/generator-builder": "dev-master" [then complete other steps from here https://www.infyom.com/open-source/laravelgenerator/docs/8.0/gui-interface]
                    },

3- run [
        -composer install
        -cp .env.example .env
        -php artisan key:generate
        -php artisan vendor:publish --provider="Appointer\Swaggervel\SwaggervelServiceProvider",
        -php artisan vendor:publish --tag=datatables
        -install spatie package for permissions and roles
        -install overtrue follow for follow&like system
        -install munafio/chatify https://github.com/munafio/chatify/ -
            => npm install, npm run watch. for munafio/chatify to find asset('css/app.css') and asset('js/app.js') and work properly. these files are compiled from resources directory and collected inside public directory
            => publish its controllers and change the namespace in App\Http\Controllers\vendor\Chatify\MessagesController and in config chatify as mentioned in the package documentation.-
            => Also change use App\User to App\Models\User in MessagesController according to User Model location.-
            => in config('chatify.user_avatar.folder') do NOT change it to to solve somenotfounderror as this will make the upload profile avatar or image fails
        -websockets
            -npm i --save laravel-echo pusher-js@4.4.0
            -uncomment broadcasting from config app
            -set broadcast_DRIVER to pusher
            -install laravel websockets https://beyondco.de/docs/laravel-websockets/getting-started/installation
            -write this in bottom or resources/ja/bootstrap.js
                import Echo from 'laravel-echo';
                window.Pusher = require('pusher-js');

                window.Echo = new Echo({
                    broadcaster: 'pusher',
                    key: process.env.MIX_PUSHER_APP_KEY,
                    cluster: process.env.MIX_PUSHER_APP_CLUSTER,
                    // forceTLS: true
                    wsHost: window.location.hostname,
                    wsPort: 6001,
                    enabledTransports: ['ws', 'wss']
                });
            -and this in config broadcasting.php in pusher options
                'options' => [
                'cluster' => env('PUSHER_APP_CLUSTER'),
                // 'useTLS' => true,
                'encrypted' => true,
                'host' => '127.0.0.1',
                'port' => 6001,
                'scheme' => 'http'
                ],


        config:cache
    ]

4- in rouseServiceProvider -> boot -> api, [
        remove namespace (comment line 44 of ->namespace(...)),
        make prefix api/v1 not api in order that swagger works properly
    ]

5- from config/infyom/laravel_generator, make true[
        swagger,
        datatables
]

6- copy buttons.server-side.js from vendor\yajra\laravel-datatables-buttons\src\resources\assets\buttons.server-side.js
    to public datatables/buttons.server-side.js and change script include path in datatables_js.blade.php from
    <script src="{{ asset('vendor/datatables/buttons.server-side.js') }}"></script>     =>>>>   <script src="{{ asset('datatables/buttons.server-side.js') }}"></script>




add functionalities [
    learn what are repositories in infyom
    learn what are resources in Http directory in infyom
    add multible deletion
    add permissions and roles by spatie package
    follow&like system by overtrue package,
    remember me ,                               => we will make the ttl null (not expiring token)(you should delete exp from config('jwt.required_claims) before making the ttl null) if $request->remember_me == 1
    forget password,
    if authenticated, cant reach login page     => the mobile dev will save it in sharedPref and before loading login screen check if the token still saved or not, if saved redirect else load login
    google maps like labbani mobile,
    learn firebase integration for mob notifications,
    learn websocket by chat app see alsubaie chatify,
]
- tips[
    - see all infyom opensource packages
    - add header ['Accept' => 'Application/json'] in api requests to get json response instead of redirection as in authenticated routes,
    - use this code to set foreign key  $table->foreignId('owner_id')->nullable()->constrained('users') and if error, make the id increments
    - read this https://laravel.com/docs/8.x/broadcasting#defining-authorization-callbacks
]














//firebase notification integration
//in User Model put
	public function pushNotification($title,$body,$message){

		$token = $this->fcm_token; //saved in the database


		if($token == null) return;

		$data['notification']['title']= $title;
		$data['notification']['body']= $body;
		$data['notification']['sound']= true;
		$data['priority']= 'normal';
		$data['data']['click_action'] = 'FLUTTER_NOTIFICATION_CLICK';
		$data['data']['message']=$message;
		$data['to'] = $token;


		$http = new \GuzzleHttp\Client(['headers'=>[
			'Centent-Type'=>'application/json',
			'Authorization'=>'key=AAAAuWiet7w:APA91bFMtMwvQJHHYe7VBzAMCy5wBRqRDyAXmnooA2Tpn2X0Tap9_o5WWvTuceJAsHDehnEWA2CZHpQ6jF65jg0sfn3mnfIRsk87lz0CeC4eNBh482pUkFrH_mCoEpWualUyvderE8Za'
            //this Authorization is from firebase
		]]);
		try {
            $response = $http->post('https://fcm.googleapis.com/fcm/send', [ 'json' =>
                    $data
            ]);
            return $response->getBody();
        } catch (\GuzzleHttp\Exception\BadResponseException $e) {
			// return $e->getCode();
            if ($e->getCode() === 400) {
                return response()->json(['ok'=>'0', 'erro'=> 'Invalid Request.'], $e->getCode());
            } else if ($e->getCode() === 401) {
                return response()->json('Your credentials are incorrect. Please try again', $e->getCode());
            }
            return response()->json('Something went wrong on the server.', $e->getCode());
        }

	}

// and in UserController put

public function fcmToken(Request $request){

		$user = User::find(auth()->id());
		$user->update(['fcm_token'=>$request['fcm_token']]);

		return response()->json('fcm updated successfully',200);

	}
